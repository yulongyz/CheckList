#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheckList
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="checklist")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertchecklist(checklist instance);
    partial void Updatechecklist(checklist instance);
    partial void Deletechecklist(checklist instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["checklistConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<checklist> checklist
		{
			get
			{
				return this.GetTable<checklist>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.checklist")]
	public partial class checklist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _checkid;
		
		private string _filename;
		
		private string _persons;
		
		private string _bug;
		
		private string _remark;
		
		private System.Nullable<int> _addtime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncheckidChanging(int value);
    partial void OncheckidChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void OnpersonsChanging(string value);
    partial void OnpersonsChanged();
    partial void OnbugChanging(string value);
    partial void OnbugChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnaddtimeChanging(System.Nullable<int> value);
    partial void OnaddtimeChanged();
    #endregion
		
		public checklist()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int checkid
		{
			get
			{
				return this._checkid;
			}
			set
			{
				if ((this._checkid != value))
				{
					this.OncheckidChanging(value);
					this.SendPropertyChanging();
					this._checkid = value;
					this.SendPropertyChanged("checkid");
					this.OncheckidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="VarChar(500)")]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_persons", DbType="VarChar(500)")]
		public string persons
		{
			get
			{
				return this._persons;
			}
			set
			{
				if ((this._persons != value))
				{
					this.OnpersonsChanging(value);
					this.SendPropertyChanging();
					this._persons = value;
					this.SendPropertyChanged("persons");
					this.OnpersonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bug", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string bug
		{
			get
			{
				return this._bug;
			}
			set
			{
				if ((this._bug != value))
				{
					this.OnbugChanging(value);
					this.SendPropertyChanging();
					this._bug = value;
					this.SendPropertyChanged("bug");
					this.OnbugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(2000)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addtime", DbType="Int")]
		public System.Nullable<int> addtime
		{
			get
			{
				return this._addtime;
			}
			set
			{
				if ((this._addtime != value))
				{
					this.OnaddtimeChanging(value);
					this.SendPropertyChanging();
					this._addtime = value;
					this.SendPropertyChanged("addtime");
					this.OnaddtimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
